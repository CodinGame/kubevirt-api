/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
  K8sIoApimachineryPkgApisMetaV1ObjectMeta,
  K8sIoApimachineryPkgApisMetaV1ObjectMetaFromJSON,
  K8sIoApimachineryPkgApisMetaV1ObjectMetaToJSON,
  V1alpha1VirtualMachineFlavorSpec,
  V1alpha1VirtualMachineFlavorSpecFromJSON,
  V1alpha1VirtualMachineFlavorSpecToJSON,
} from './';

/**
 * VirtualMachineFlavor resource contains quantitative and resource related VirtualMachine configuration that can be used by multiple VirtualMachine resources.
 * @export
 * @interface V1alpha1VirtualMachineFlavor
 */
export interface V1alpha1VirtualMachineFlavor {
  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @type {string}
   * @memberof V1alpha1VirtualMachineFlavor
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @type {string}
   * @memberof V1alpha1VirtualMachineFlavor
   */
  kind?: string;
  /**
   *
   * @type {K8sIoApimachineryPkgApisMetaV1ObjectMeta}
   * @memberof V1alpha1VirtualMachineFlavor
   */
  metadata?: K8sIoApimachineryPkgApisMetaV1ObjectMeta;
  /**
   *
   * @type {V1alpha1VirtualMachineFlavorSpec}
   * @memberof V1alpha1VirtualMachineFlavor
   */
  spec: V1alpha1VirtualMachineFlavorSpec;
}

export function V1alpha1VirtualMachineFlavorFromJSON(json: any): V1alpha1VirtualMachineFlavor {
  return V1alpha1VirtualMachineFlavorFromJSONTyped(json, false);
}

export function V1alpha1VirtualMachineFlavorFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): V1alpha1VirtualMachineFlavor {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    apiVersion: !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
    kind: !exists(json, 'kind') ? undefined : json['kind'],
    metadata: !exists(json, 'metadata')
      ? undefined
      : K8sIoApimachineryPkgApisMetaV1ObjectMetaFromJSON(json['metadata']),
    spec: V1alpha1VirtualMachineFlavorSpecFromJSON(json['spec']),
  };
}

export function V1alpha1VirtualMachineFlavorToJSON(
  value?: V1alpha1VirtualMachineFlavor | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    apiVersion: value.apiVersion,
    kind: value.kind,
    metadata: K8sIoApimachineryPkgApisMetaV1ObjectMetaToJSON(value.metadata),
    spec: V1alpha1VirtualMachineFlavorSpecToJSON(value.spec),
  };
}
