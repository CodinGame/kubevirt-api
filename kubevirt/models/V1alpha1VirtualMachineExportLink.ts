/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
  V1alpha1VirtualMachineExportVolume,
  V1alpha1VirtualMachineExportVolumeFromJSON,
  V1alpha1VirtualMachineExportVolumeToJSON,
} from './';

/**
 * VirtualMachineExportLink contains a list of volumes available for export, as well as the URLs to obtain these volumes
 * @export
 * @interface V1alpha1VirtualMachineExportLink
 */
export interface V1alpha1VirtualMachineExportLink {
  /**
   * Cert is the public CA certificate base64 encoded
   * @type {string}
   * @memberof V1alpha1VirtualMachineExportLink
   */
  cert: string;
  /**
   * Volumes is a list of available volumes to export
   * @type {Array<V1alpha1VirtualMachineExportVolume>}
   * @memberof V1alpha1VirtualMachineExportLink
   */
  volumes?: Array<V1alpha1VirtualMachineExportVolume>;
}

export function V1alpha1VirtualMachineExportLinkFromJSON(
  json: any,
): V1alpha1VirtualMachineExportLink {
  return V1alpha1VirtualMachineExportLinkFromJSONTyped(json, false);
}

export function V1alpha1VirtualMachineExportLinkFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): V1alpha1VirtualMachineExportLink {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    cert: json['cert'],
    volumes: !exists(json, 'volumes')
      ? undefined
      : (json['volumes'] as Array<any>).map(V1alpha1VirtualMachineExportVolumeFromJSON),
  };
}

export function V1alpha1VirtualMachineExportLinkToJSON(
  value?: V1alpha1VirtualMachineExportLink | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    cert: value.cert,
    volumes:
      value.volumes === undefined
        ? undefined
        : (value.volumes as Array<any>).map(V1alpha1VirtualMachineExportVolumeToJSON),
  };
}
