/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.
 * @export
 * @interface IoK8sApiCoreV1ScopedResourceSelectorRequirement
 */
export interface IoK8sApiCoreV1ScopedResourceSelectorRequirement {
  /**
   * Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
   *
   * Possible enum values:
   *  - `"DoesNotExist"`
   *  - `"Exists"`
   *  - `"In"`
   *  - `"NotIn"`
   * @type {string}
   * @memberof IoK8sApiCoreV1ScopedResourceSelectorRequirement
   */
  operator: IoK8sApiCoreV1ScopedResourceSelectorRequirementOperatorEnum;
  /**
   * The name of the scope that the selector applies to.
   *
   * Possible enum values:
   *  - `"BestEffort"` Match all pod objects that have best effort quality of service
   *  - `"CrossNamespacePodAffinity"` Match all pod objects that have cross-namespace pod (anti)affinity mentioned. This is a beta feature enabled by the PodAffinityNamespaceSelector feature flag.
   *  - `"NotBestEffort"` Match all pod objects that do not have best effort quality of service
   *  - `"NotTerminating"` Match all pod objects where spec.activeDeadlineSeconds is nil
   *  - `"PriorityClass"` Match all pod objects that have priority class mentioned
   *  - `"Terminating"` Match all pod objects where spec.activeDeadlineSeconds >=0
   * @type {string}
   * @memberof IoK8sApiCoreV1ScopedResourceSelectorRequirement
   */
  scopeName: IoK8sApiCoreV1ScopedResourceSelectorRequirementScopeNameEnum;
  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   * @type {Array<string>}
   * @memberof IoK8sApiCoreV1ScopedResourceSelectorRequirement
   */
  values?: Array<string>;
}

/**
 * @export
 * @enum {string}
 */
export enum IoK8sApiCoreV1ScopedResourceSelectorRequirementOperatorEnum {
  DoesNotExist = 'DoesNotExist',
  Exists = 'Exists',
  In = 'In',
  NotIn = 'NotIn',
}
/**
 * @export
 * @enum {string}
 */
export enum IoK8sApiCoreV1ScopedResourceSelectorRequirementScopeNameEnum {
  BestEffort = 'BestEffort',
  CrossNamespacePodAffinity = 'CrossNamespacePodAffinity',
  NotBestEffort = 'NotBestEffort',
  NotTerminating = 'NotTerminating',
  PriorityClass = 'PriorityClass',
  Terminating = 'Terminating',
}

export function IoK8sApiCoreV1ScopedResourceSelectorRequirementFromJSON(
  json: any,
): IoK8sApiCoreV1ScopedResourceSelectorRequirement {
  return IoK8sApiCoreV1ScopedResourceSelectorRequirementFromJSONTyped(json, false);
}

export function IoK8sApiCoreV1ScopedResourceSelectorRequirementFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): IoK8sApiCoreV1ScopedResourceSelectorRequirement {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    operator: json['operator'],
    scopeName: json['scopeName'],
    values: !exists(json, 'values') ? undefined : json['values'],
  };
}

export function IoK8sApiCoreV1ScopedResourceSelectorRequirementToJSON(
  value?: IoK8sApiCoreV1ScopedResourceSelectorRequirement | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    operator: value.operator,
    scopeName: value.scopeName,
    values: value.values,
  };
}
